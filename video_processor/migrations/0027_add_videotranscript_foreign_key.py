# Generated by Django 5.2.3 on 2025-01-03 XX:XX

import django.db.models.deletion
from django.db import migrations, models


def populate_video_metadata_fk(apps, schema_editor):
    """
    Populate the new video_metadata foreign key field with existing VideoMetadata instances
    """
    VideoTranscript = apps.get_model('video_processor', 'VideoTranscript')
    VideoMetadata = apps.get_model('video_processor', 'VideoMetadata')
    
    for transcript in VideoTranscript.objects.all():
        try:
            # Find the corresponding VideoMetadata with the same video_id
            video_metadata = VideoMetadata.objects.get(video_id=transcript.video_id)
            transcript.video_metadata = video_metadata
            transcript.save(update_fields=['video_metadata'])
            print(f"Linked VideoTranscript {transcript.video_id} to VideoMetadata")
        except VideoMetadata.DoesNotExist:
            print(f"Warning: No VideoMetadata found for VideoTranscript {transcript.video_id}")


def reverse_populate_video_metadata_fk(apps, schema_editor):
    """
    Reverse migration - clear the video_metadata foreign key field
    """
    VideoTranscript = apps.get_model('video_processor', 'VideoTranscript')
    VideoTranscript.objects.update(video_metadata=None)


class Migration(migrations.Migration):

    dependencies = [
        ('video_processor', '0026_remove_videometadata_video_proce_video_i_33baae_idx_and_more'),
    ]

    operations = [
        # Step 1: Add the foreign key field as nullable
        migrations.AddField(
            model_name='videotranscript',
            name='video_metadata',
            field=models.OneToOneField(
                to='video_processor.VideoMetadata',
                on_delete=models.CASCADE,
                to_field='video_id',
                related_name='video_transcript',
                null=True,  # Allow null initially
                blank=True,
                help_text='Foreign key to VideoMetadata for proper cascading deletes'
            ),
        ),
        
        # Step 2: Populate the foreign key field with existing data
        migrations.RunPython(
            populate_video_metadata_fk,
            reverse_populate_video_metadata_fk,
        ),
        
        # Step 3: Make the field non-nullable now that it's populated
        migrations.AlterField(
            model_name='videotranscript',
            name='video_metadata',
            field=models.OneToOneField(
                to='video_processor.VideoMetadata',
                on_delete=models.CASCADE,
                to_field='video_id',
                related_name='video_transcript',
                help_text='Foreign key to VideoMetadata for proper cascading deletes'
            ),
        ),
    ] 