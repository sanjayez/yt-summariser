# Generated by Django 5.2.3 on 2025-07-10 02:55

from django.db import migrations, models


def populate_video_id_references(apps, schema_editor):
    """
    Populate the new video_id field in VideoTranscript with the correct video_id
    from the related VideoMetadata record.
    """
    VideoTranscript = apps.get_model('video_processor', 'VideoTranscript')
    
    for transcript in VideoTranscript.objects.select_related('video_metadata'):
        if transcript.video_metadata:
            transcript.video_id = transcript.video_metadata.video_id
            transcript.save()
            print(f"Updated VideoTranscript {transcript.id} with video_id: {transcript.video_id}")


def reverse_populate_video_id_references(apps, schema_editor):
    """
    Reverse migration - clear the video_id field
    """
    VideoTranscript = apps.get_model('video_processor', 'VideoTranscript')
    VideoTranscript.objects.all().update(video_id=None)


class Migration(migrations.Migration):

    dependencies = [
        ('video_processor', '0012_alter_videometadata_video_id'),
    ]

    operations = [
        # Step 1: Add a temporary video_id field to VideoTranscript
        migrations.AddField(
            model_name='videotranscript',
            name='video_id',
            field=models.CharField(
                max_length=20,
                null=True,
                blank=True,
                help_text='YouTube video ID - will become the foreign key'
            ),
        ),
        
        # Step 2: Populate the video_id field with data from the existing relationship
        migrations.RunPython(
            populate_video_id_references,
            reverse_populate_video_id_references,
        ),
        
        # Step 3: Make video_id non-nullable now that it's populated
        migrations.AlterField(
            model_name='videotranscript',
            name='video_id',
            field=models.CharField(
                max_length=20,
                null=False,
                blank=False,
                help_text='YouTube video ID - foreign key to VideoMetadata'
            ),
        ),
    ]