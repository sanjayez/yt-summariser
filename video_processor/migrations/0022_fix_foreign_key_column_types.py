# Generated by Django 5.2.3 on 2025-07-10 19:07

from django.db import migrations


def fix_foreign_key_column_types(apps, schema_editor):
    """
    Fix foreign key column types that are still bigint but should be varchar
    to match the natural keys they're referencing.
    """
    db_alias = schema_editor.connection.alias
    
    with schema_editor.connection.cursor() as cursor:
        # Step 1: Drop the old foreign key constraint for video_metadata_id
        cursor.execute("""
            ALTER TABLE video_processor_videotranscript 
            DROP COLUMN IF EXISTS video_metadata_id CASCADE;
        """)
        
        # Step 2: Drop the old foreign key constraint for transcript_id in transcriptsegment
        cursor.execute("""
            ALTER TABLE video_processor_transcriptsegment 
            DROP COLUMN IF EXISTS transcript_id CASCADE;
        """)
        
        print("Successfully dropped old foreign key columns")


def reverse_fix_foreign_key_column_types(apps, schema_editor):
    """
    Reverse migration - this would be complex to implement safely,
    so we'll just print a warning.
    """
    print("WARNING: Reverse migration for foreign key column type fix is not implemented")
    print("This migration cannot be easily reversed as it removes columns")


class Migration(migrations.Migration):

    dependencies = [
        ('video_processor', '0021_alter_transcriptsegment_transcript'),
    ]

    operations = [
        migrations.RunPython(
            fix_foreign_key_column_types,
            reverse_fix_foreign_key_column_types,
        ),
    ]
