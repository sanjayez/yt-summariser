# Generated by Django 5.2.3 on 2025-09-11 11:58

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('yt_workflow', '0002_alter_commentsresult_video_id_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='TranscriptSegment',
            fields=[
                ('line_id', models.CharField(help_text='Format: video_id_line_idx (e.g., t1hOdm0RJlY_line_42)', max_length=50, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Invalid line_id format. Expected: video_id_line_idx', regex='^[A-Za-z0-9_-]{11}_line_\\d+$')])),
                ('video_id', models.CharField(db_index=True, max_length=11, validators=[django.core.validators.RegexValidator(message='Invalid YouTube video ID format', regex='^[A-Za-z0-9_-]{11}$')])),
                ('idx', models.PositiveIntegerField(help_text='1-based line index within the video')),
                ('start', models.DecimalField(decimal_places=2, help_text='Start time in seconds', max_digits=10)),
                ('end', models.DecimalField(decimal_places=2, help_text='End time in seconds', max_digits=10)),
                ('text', models.TextField(help_text='Normalized transcript text content')),
            ],
            options={
                'verbose_name': 'Transcript Segment',
                'verbose_name_plural': 'Transcript Segments',
                'db_table': 'transcript',
                'ordering': ['video_id', 'idx'],
            },
        ),
        migrations.DeleteModel(
            name='TranscriptResult',
        ),
        migrations.AddIndex(
            model_name='transcriptsegment',
            index=models.Index(fields=['video_id', 'idx'], name='transcript_video_i_32fea4_idx'),
        ),
        migrations.AddIndex(
            model_name='transcriptsegment',
            index=models.Index(fields=['video_id', 'start'], name='transcript_video_i_13d015_idx'),
        ),
        migrations.AddIndex(
            model_name='transcriptsegment',
            index=models.Index(fields=['start', 'end'], name='transcript_start_2bf718_idx'),
        ),
        migrations.AddConstraint(
            model_name='transcriptsegment',
            constraint=models.CheckConstraint(condition=models.Q(('start__gte', 0)), name='transcript_start_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='transcriptsegment',
            constraint=models.CheckConstraint(condition=models.Q(('end__gt', models.F('start'))), name='transcript_end_after_start'),
        ),
        migrations.AddConstraint(
            model_name='transcriptsegment',
            constraint=models.CheckConstraint(condition=models.Q(('idx__gt', 0)), name='transcript_idx_positive'),
        ),
    ]
